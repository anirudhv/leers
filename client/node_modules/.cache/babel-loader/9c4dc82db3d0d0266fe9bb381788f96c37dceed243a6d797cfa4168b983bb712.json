{"ast":null,"code":"'use strict';\n\n// huge list of words\nconst words = require(\"./words.js\");\n\n// random because why reinvent the wheel?\nconst Random = require(\"random-js\");\n\n// by default\n// words are not unique\n// only a single word is returned\n// there are no length constraints\nconst defaultOpts = {\n  count: 1,\n  minLength: words.minLength,\n  maxLength: words.maxLength,\n  defaultSeed: 137,\n  unique: false\n};\nconst byLength = (min, max) => str => {\n  return str.length >= min && str.length <= max;\n};\nconst geta_random_word = options => {\n  const {\n    count = defaultOpts.count,\n    minLength = defaultOpts.minLength,\n    maxLength = defaultOpts.maxLength,\n    unique = defaultOpts.unique,\n    engine = Random.MersenneTwister19937.seed(defaultOpts.defaultSeed)\n  } = options;\n  const r = new Random.Random(engine);\n  const rangeCheck = byLength(minLength, maxLength);\n  const list = (unique ? Array.from(new Set(words.list)) : words.list).filter(rangeCheck);\n  const prod = unique ? r.sample(list, count) : r.dice(list.length, count).map(i => list[i]);\n  return count == 1 ? prod[0] : prod;\n};\nconst grw = function (cb) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOpts;\n  // experiment\n  setImmediate(() => cb(geta_random_word(opts)));\n};\ngrw.minLength = defaultOpts.minLength;\ngrw.maxLength = defaultOpts.maxLength;\nmodule.exports = grw;","map":{"version":3,"names":["words","require","Random","defaultOpts","count","minLength","maxLength","defaultSeed","unique","byLength","min","max","str","length","geta_random_word","options","engine","MersenneTwister19937","seed","r","rangeCheck","list","Array","from","Set","filter","prod","sample","dice","map","i","grw","cb","opts","setImmediate","module","exports"],"sources":["C:/Users/aniru/Documents/leers/node_modules/geta-random-word/index.js"],"sourcesContent":["'use strict'\n\n// huge list of words\nconst words = require(\"./words.js\")\n\n// random because why reinvent the wheel?\nconst Random = require(\"random-js\");\n\n// by default\n// words are not unique\n// only a single word is returned\n// there are no length constraints\nconst defaultOpts = {\n  count : 1, minLength : words.minLength, maxLength : words.maxLength, defaultSeed: 137, unique: false\n}\n\nconst byLength = (min, max) => (str) => {\n  return str.length >= min && str.length <= max\n}\n\nconst geta_random_word = (options) => {\n  const { count = defaultOpts.count, \n          minLength = defaultOpts.minLength, \n          maxLength = defaultOpts.maxLength,\n          unique = defaultOpts.unique,\n          engine = Random.MersenneTwister19937.seed(defaultOpts.defaultSeed) } = options\n\n  const r = new Random.Random(engine)\n  const rangeCheck = byLength(minLength, maxLength)\n  const list = (unique ? Array.from(new Set(words.list)) : words.list).filter(rangeCheck)\n  const prod = unique ? r.sample(list, count) : r.dice(list.length, count).map(i => list[i])\n\n  return count == 1 ? prod[0] : prod\n}\n\nconst grw = (cb, opts = defaultOpts) => {\n  // experiment\n  setImmediate(() => cb(geta_random_word(opts)))\n}\ngrw.minLength = defaultOpts.minLength\ngrw.maxLength = defaultOpts.maxLength\nmodule.exports = grw\n\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,YAAY,CAAC;;AAEnC;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,WAAW,CAAC;;AAEnC;AACA;AACA;AACA;AACA,MAAME,WAAW,GAAG;EAClBC,KAAK,EAAG,CAAC;EAAEC,SAAS,EAAGL,KAAK,CAACK,SAAS;EAAEC,SAAS,EAAGN,KAAK,CAACM,SAAS;EAAEC,WAAW,EAAE,GAAG;EAAEC,MAAM,EAAE;AACjG,CAAC;AAED,MAAMC,QAAQ,GAAG,CAACC,GAAG,EAAEC,GAAG,KAAMC,GAAG,IAAK;EACtC,OAAOA,GAAG,CAACC,MAAM,IAAIH,GAAG,IAAIE,GAAG,CAACC,MAAM,IAAIF,GAAG;AAC/C,CAAC;AAED,MAAMG,gBAAgB,GAAIC,OAAO,IAAK;EACpC,MAAM;IAAEX,KAAK,GAAGD,WAAW,CAACC,KAAK;IACzBC,SAAS,GAAGF,WAAW,CAACE,SAAS;IACjCC,SAAS,GAAGH,WAAW,CAACG,SAAS;IACjCE,MAAM,GAAGL,WAAW,CAACK,MAAM;IAC3BQ,MAAM,GAAGd,MAAM,CAACe,oBAAoB,CAACC,IAAI,CAACf,WAAW,CAACI,WAAW;EAAE,CAAC,GAAGQ,OAAO;EAEtF,MAAMI,CAAC,GAAG,IAAIjB,MAAM,CAACA,MAAM,CAACc,MAAM,CAAC;EACnC,MAAMI,UAAU,GAAGX,QAAQ,CAACJ,SAAS,EAAEC,SAAS,CAAC;EACjD,MAAMe,IAAI,GAAG,CAACb,MAAM,GAAGc,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACxB,KAAK,CAACqB,IAAI,CAAC,CAAC,GAAGrB,KAAK,CAACqB,IAAI,EAAEI,MAAM,CAACL,UAAU,CAAC;EACvF,MAAMM,IAAI,GAAGlB,MAAM,GAAGW,CAAC,CAACQ,MAAM,CAACN,IAAI,EAAEjB,KAAK,CAAC,GAAGe,CAAC,CAACS,IAAI,CAACP,IAAI,CAACR,MAAM,EAAET,KAAK,CAAC,CAACyB,GAAG,CAACC,CAAC,IAAIT,IAAI,CAACS,CAAC,CAAC,CAAC;EAE1F,OAAO1B,KAAK,IAAI,CAAC,GAAGsB,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI;AACpC,CAAC;AAED,MAAMK,GAAG,GAAG,UAACC,EAAE,EAAyB;EAAA,IAAvBC,IAAI,uEAAG9B,WAAW;EACjC;EACA+B,YAAY,CAAC,MAAMF,EAAE,CAAClB,gBAAgB,CAACmB,IAAI,CAAC,CAAC,CAAC;AAChD,CAAC;AACDF,GAAG,CAAC1B,SAAS,GAAGF,WAAW,CAACE,SAAS;AACrC0B,GAAG,CAACzB,SAAS,GAAGH,WAAW,CAACG,SAAS;AACrC6B,MAAM,CAACC,OAAO,GAAGL,GAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}